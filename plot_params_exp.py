import matplotlib.pyplot as plt
import numpy as np
import pickle

sim = False
params = {'distance_params': {'zero_dist_prob_neg_exponent': np.array([0.10729586, 0.10419707, 0.11476756, 0.12087196, 0.12415902,
       0.12546282, 0.12584236, 0.12576827, 0.1255932 , 0.12543646,
       0.124486  , 0.12356357, 0.12307379, 0.12249986, 0.12219769,
       0.12144201, 0.1211614 , 0.12087333, 0.12076133, 0.1209128 ,
       0.12071104, 0.12030365, 0.12073888, 0.12091226, 0.120865  ,
       0.12040678, 0.12054045, 0.12082545, 0.12077522, 0.12092154,
       0.12090241, 0.12088842, 0.12084017, 0.12088335, 0.12087968,
       0.12091777, 0.12119217, 0.12126204, 0.1208519 , 0.12114812,
       0.12077575, 0.12092658, 0.12072761, 0.12086007, 0.12091974,
       0.12102389, 0.12077836]), 'lambda_speed': np.array([0.1       , 0.11713262, 0.10140911, 0.09078892, 0.0846248 ,
       0.08195874, 0.08196935, 0.08288603, 0.0837683 , 0.08373632,
       0.08635193, 0.08785954, 0.08842352, 0.08978747, 0.08969371,
       0.09060237, 0.09110433, 0.09160768, 0.09210493, 0.09131122,
       0.09193611, 0.09266215, 0.09082713, 0.09090821, 0.09017698,
       0.09141067, 0.09080548, 0.09054506, 0.09055394, 0.09040835,
       0.09006365, 0.09009148, 0.09004272, 0.09020227, 0.08988461,
       0.09013855, 0.09013357, 0.08992577, 0.09129836, 0.08963637,
       0.09054034, 0.09018595, 0.09130171, 0.09092561, 0.0909763 ,
       0.09042706, 0.09108936])}, 'deviation_beta': np.array([0.01      , 0.1387539 , 0.11324957, 0.08919439, 0.07004621,
       0.05749335, 0.05237445, 0.05051317, 0.0500519 , 0.03890577,
       0.03960897, 0.04121683, 0.03802865, 0.04094173, 0.03704695,
       0.03811631, 0.03744959, 0.03811528, 0.0417138 , 0.03689162,
       0.03755139, 0.04669189, 0.04131185, 0.04234101, 0.03694972,
       0.04309491, 0.04238495, 0.04142155, 0.04242668, 0.0425139 ,
       0.04152801, 0.04177899, 0.04161073, 0.0426103 , 0.04140487,
       0.04239325, 0.0417233 , 0.03755909, 0.04694698, 0.03805514,
       0.04190458, 0.03723519, 0.04196234, 0.04120713, 0.04213378,
       0.03741203, 0.03771731]), 'gps_sd': np.array([7.        , 6.33543959, 6.49286671, 6.33603318, 6.19420871,
       5.96737121, 5.83238555, 5.76787394, 5.72075465, 5.86367553,
       5.7360465 , 5.69299873, 5.64747459, 5.65493433, 5.82664663,
       5.70261463, 5.6404612 , 5.62431897, 5.67769949, 5.65363923,
       5.61491678, 5.65564621, 5.85296343, 5.73430696, 5.66453901,
       5.65320271, 5.63372002, 5.8289167 , 5.72310127, 5.67867224,
       5.90241387, 5.96413119, 5.9894048 , 5.81472693, 5.89081564,
       5.72867998, 5.69147124, 5.64901731, 5.68422841, 5.82240809,
       5.73268195, 5.6636632 , 5.69689216, 5.66701702, 5.64257486,
       5.62801326, 5.62610354])}


# Simulated data
sim = True
params = {'distance_params': {'zero_dist_prob_neg_exponent': np.array([0.10729586, 0.09489556, 0.09472947, 0.08377034, 0.09504531,
       0.0965774 , 0.09024031, 0.09006474, 0.08297269, 0.09230739,
       0.09195925, 0.08472018, 0.09273799, 0.09200518, 0.0851533 ,
       0.09202729, 0.09038067, 0.08505705, 0.09034699, 0.08660465,
       0.08789966, 0.0829752 , 0.09005454, 0.08787234, 0.08574351,
       0.08587958, 0.08284123, 0.08720209, 0.08293207, 0.08954731,
       0.08803763, 0.0853919 , 0.0868334 , 0.08283239, 0.08902891,
       0.08693599, 0.08634529, 0.08427896, 0.08633768, 0.08259129,
       0.0885494 , 0.0861926 , 0.08609572, 0.08353145]), 'lambda_speed': np.array([0.1       , 0.09851694, 0.08350938, 0.09729836, 0.08171598,
       0.07433242, 0.08039576, 0.07781286, 0.09026698, 0.07931165,
       0.07622327, 0.08873523, 0.07878599, 0.07655563, 0.08747531,
       0.07852668, 0.07762178, 0.08569552, 0.07837468, 0.08233512,
       0.07932679, 0.0884392 , 0.07998429, 0.0804117 , 0.08241712,
       0.080996  , 0.0855688 , 0.07991267, 0.08810829, 0.07991339,
       0.08028125, 0.0832434 , 0.08039036, 0.08762113, 0.08013844,
       0.08171916, 0.08142543, 0.08404742, 0.08076681, 0.08763155,
       0.08038491, 0.08234375, 0.08110807, 0.08538781])}, 'deviation_beta': np.array([0.01      , 0.0505651 , 0.00547218, 0.11392638, 0.06029268,
       0.016796  , 0.03038341, 0.00780432, 0.0819674 , 0.03514224,
       0.00836317, 0.07800854, 0.03310922, 0.00919312, 0.06957247,
       0.02723718, 0.0110046 , 0.0525256 , 0.01554623, 0.02943521,
       0.00860771, 0.0596994 , 0.020922  , 0.01707625, 0.0230585 ,
       0.01236191, 0.03854365, 0.00932524, 0.05908503, 0.02146608,
       0.01535342, 0.02753446, 0.00984695, 0.05388355, 0.01831234,
       0.0210822 , 0.01497953, 0.02841743, 0.00978893, 0.05123249,
       0.01710246, 0.02284046, 0.01266052, 0.03644651]), 'gps_sd': np.array([7.        , 5.0958187 , 4.02473023, 3.49466532, 3.23744668,
       3.11077896, 3.05536771, 3.03616273, 3.03404451, 3.02872064,
       3.02800307, 3.01916027, 3.01208376, 3.02055982, 3.01893686,
       3.02232168, 3.01440286, 3.02244037, 3.02133101, 3.02133939,
       3.02548943, 3.25188423, 3.107921  , 3.04995842, 3.03664921,
       3.03415884, 3.03576905, 3.02386055, 3.02554438, 3.02432133,
       3.0216045 , 3.01478034, 3.02388789, 3.02285798, 3.01852068,
       3.02277662, 3.0240085 , 3.02336042, 3.03026379, 3.02214334,
       3.021036  , 3.02401545, 3.03112829, 3.03030642])}

params = {'distance_params': {'zero_dist_prob_neg_exponent': np.array([0.19971548, 0.18024959, 0.16691947, 0.15212303, 0.13672292,
       0.12156103, 0.10954632, 0.09925361, 0.09253009, 0.08713271,
       0.08474945, 0.0817188 , 0.0823337 , 0.07994199, 0.08199894,
       0.07975481, 0.08213034, 0.08010652, 0.08186585]), 'lambda_speed': np.array([0.05      , 0.09092271, 0.08239988, 0.07765113, 0.07734507,
       0.08105181, 0.08098973, 0.0831431 , 0.08250467, 0.08437634,
       0.08332877, 0.08544351, 0.08347112, 0.08644131, 0.08340681,
       0.08663962, 0.08358302, 0.08658925, 0.08372008])}, 'deviation_beta': np.array([0.01      , 0.09978115, 0.06428074, 0.0346372 , 0.0185876 ,
       0.02351136, 0.01650632, 0.02123439, 0.01477902, 0.02022706,
       0.01268965, 0.02258582, 0.01083797, 0.02632776, 0.01045137,
       0.02693157, 0.01083161, 0.02548312, 0.01106707]), 'gps_sd': np.array([7.        , 5.06787308, 4.01765172, 3.43410099, 3.14644237,
       3.02294348, 2.97314161, 2.96300313, 2.95719216, 2.95278525,
       2.95745511, 2.95504034, 2.95839555, 2.95811367, 2.95811642,
       2.94919184, 2.96142649, 2.96283576, 2.97522833])}

params = {'distance_params': {'zero_dist_prob_neg_exponent': np.array([0.26080153, 0.25463876, 0.25232939, 0.25015298, 0.2479761 ,
       0.24587123, 0.24386302, 0.24194332, 0.24012208, 0.23842243,
       0.23677696, 0.23522702, 0.23376561, 0.23231731, 0.23098781,
       0.22966327, 0.2284293 , 0.22723632, 0.22602628, 0.22489122,
       0.22380832, 0.22271694, 0.22169631, 0.22069247]), 'lambda_speed': np.array([0.05      , 0.11237722, 0.10584782, 0.10250906, 0.10084304,
       0.10039669, 0.10078176, 0.10177792, 0.10305766, 0.10439651,
       0.10561416, 0.10662111, 0.107491  , 0.1082132 , 0.1088822 ,
       0.10942223, 0.10991603, 0.11033145, 0.11067583, 0.11100791,
       0.11131174, 0.1115528 , 0.11179123, 0.11199116])}, 'deviation_beta': np.array([0.01      , 0.11620019, 0.08938972, 0.06845042, 0.05189269,
       0.03924391, 0.0303045 , 0.02473224, 0.02188526, 0.02052475,
       0.02017652, 0.01978292, 0.01947406, 0.01928552, 0.01915925,
       0.01885635, 0.0187856 , 0.01862625, 0.018538  , 0.01834579,
       0.01832031, 0.01832432, 0.01828445, 0.01819514]), 'gps_sd': np.array([7.        , 5.24984761, 4.21084298, 3.58002053, 3.21242328,
       3.03313396, 2.94145216, 2.88821689, 2.86171775, 2.84271021,
       2.83195709, 2.8300678 , 2.82159881, 2.81857147, 2.82051872,
       2.82497587, 2.8302232 , 2.82842636, 2.83231024, 2.83718952,
       2.8200848 , 2.81868437, 2.82636348, 2.8205641 ])}

params = pickle.load(open('/Users/samddd/Main/bayesian-map-matching/simulations/cambridge/tuned_sim_params.pickle', 'rb'))

n_iter = len(params['gps_sd'])

fig, axes = plt.subplots(4, 1, sharex=True, figsize=(7, 10))

axes[0].plot(np.arange(n_iter), np.exp(-15 * params['distance_params']['zero_dist_prob_neg_exponent']))
axes[1].plot(np.arange(n_iter), params['distance_params']['lambda_speed'])
axes[2].plot(np.arange(n_iter), params['deviation_beta'])
axes[3].plot(np.arange(n_iter), params['gps_sd'])

axes[0].set_ylabel(r'$p^0$')
axes[1].set_ylabel(r'$\lambda$')
axes[2].set_ylabel(r'$\beta$')
axes[3].set_ylabel(r'$\sigma_{GPS}$')


if sim:
       line_colour = 'purple'
       axes[0].hlines(0.05, 0, n_iter, colors=line_colour)
       axes[1].hlines(1/15, 0, n_iter, colors=line_colour)
       axes[2].hlines(0.02, 0, n_iter, colors=line_colour)
       axes[3].hlines(3.0, 0, n_iter, colors=line_colour)

plt.tight_layout()
plt.show()
